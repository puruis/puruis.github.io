<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FS&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-22T07:16:22.886Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>purui</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot 整合 Spring Data Jpa</title>
    <link href="http://yoursite.com/2019/02/22/themes-life/"/>
    <id>http://yoursite.com/2019/02/22/themes-life/</id>
    <published>2019-02-22T07:06:34.000Z</published>
    <updated>2019-02-22T07:16:22.886Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1550829338589&amp;di=49ddbdc264fe9758f298541d1d233870&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201603%2F27%2F20160327141837_AfHx5.jpeg" target="_blank" rel="noopener"><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1550829338589&amp;di=49ddbdc264fe9758f298541d1d233870&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201603%2F27%2F20160327141837_AfHx5.jpeg" alt=""></a></p><p>download :  <a href="https://github.com/puruis/SpringBoot-Collection.git" target="_blank" rel="noopener">https://github.com/puruis/SpringBoot-Collection.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550829338589&amp;amp;di=49ddbdc264fe9758f298541d1d2
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="Spring Data Jpa" scheme="http://yoursite.com/tags/Spring-Data-Jpa/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot Aop使用</title>
    <link href="http://yoursite.com/2019/02/21/themes-life/"/>
    <id>http://yoursite.com/2019/02/21/themes-life/</id>
    <published>2019-02-21T07:44:34.000Z</published>
    <updated>2019-02-22T07:16:11.946Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://images.gitee.com/uploads/images/2019/0221/153626_e90d6833_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0221/153626_e90d6833_1289853.png" alt=""></a></p><p>查看实验结果</p><p><a href="https://images.gitee.com/uploads/images/2019/0221/153950_e23058a5_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0221/153950_e23058a5_1289853.png" alt=""></a></p><p>download :  <a href="https://github.com/puruis/SpringBoot-Collection.git" target="_blank" rel="noopener">https://github.com/puruis/SpringBoot-Collection.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://images.gitee.com/uploads/images/2019/0221/153626_e90d6833_1289853.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;https://
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="Aop" scheme="http://yoursite.com/tags/Aop/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 整合 thymeleaf</title>
    <link href="http://yoursite.com/2019/02/20/themes-life/"/>
    <id>http://yoursite.com/2019/02/20/themes-life/</id>
    <published>2019-02-20T07:14:34.000Z</published>
    <updated>2019-02-22T07:08:27.327Z</updated>
    
    <content type="html"><![CDATA[<p>[<img src="https://dpic.tiankong.com/kl/i7/QJ6674590289.jpg?x-oss-process=style/670ws" alt=""></p><p>（一）Thymeleaf 是个什么？</p><pre><code> 简单说， Thymeleaf 是一个跟 Velocity、FreeMarker 类似的模板引擎，它可以完全替代 JSP 。相较与其他的模板引擎，它有如下三个极吸引人的特点：1.Thymeleaf 在有网络和无网络的环境下皆可运行，即它可以让美工在浏览器查看页面的静态效果，也可以让程序员在服务器查看带数据的动态页面效果。这是由于它支持 html 原型，然后在 html 标签里增加额外的属性来达到模板+数据的展示方式。浏览器解释 html 时会忽略未定义的标签属性，所以 thymeleaf 的模板可以静态地运行；当有数据返回到页面时，Thymeleaf 标签会动态地替换掉静态内容，使页面动态显示。2.Thymeleaf 开箱即用的特性。它提供标准和spring标准两种方言，可以直接套用模板实现JSTL、 OGNL表达式效果，避免每天套模板、该jstl、改标签的困扰。同时开发人员也可以扩展和创建自定义的方言。</code></pre><hr><p>话不多说，新建一个项目<br><a href="http://img5.imgtn.bdimg.com/it/u=1264549799,3309474862&amp;fm=26&amp;gp=0.jpg" target="_blank" rel="noopener"><img src="http://img5.imgtn.bdimg.com/it/u=1264549799,3309474862&amp;fm=26&amp;gp=0.jpg" alt=""></a><br>选择相关依赖<br><a href="https://images.gitee.com/uploads/images/2019/0220/164808_46a82da9_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/164808_46a82da9_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/164827_73ad3926_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/164827_73ad3926_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/164837_36c12938_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/164837_36c12938_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/164925_91de8446_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/164925_91de8446_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/164946_e23f893e_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/164946_e23f893e_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/165002_ae08f148_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165002_ae08f148_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/165115_39e42859_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165115_39e42859_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0220/165019_b899cdbe_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165019_b899cdbe_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0220/165213_d32876f6_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165213_d32876f6_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0220/165224_e187fe28_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165224_e187fe28_1289853.png" alt=""></a><br>js测试代码<br><a href="https://images.gitee.com/uploads/images/2019/0220/165258_90a5efc8_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165258_90a5efc8_1289853.png" alt=""></a><br>样式<br><a href="https://images.gitee.com/uploads/images/2019/0220/165310_d20fbadb_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/165310_d20fbadb_1289853.png" alt=""></a></p><p>简单完事 收工</p><p>download : <a href="https://github.com/puruis/SpringBoot-Collection.git" target="_blank" rel="noopener">https://github.com/puruis/SpringBoot-Collection.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[&lt;img src=&quot;https://dpic.tiankong.com/kl/i7/QJ6674590289.jpg?x-oss-process=style/670ws&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（一）Thymeleaf 是个什么？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="thymeleaf" scheme="http://yoursite.com/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>三分钟搭建SpringBoot工程</title>
    <link href="http://yoursite.com/2019/02/20/themes-life/"/>
    <id>http://yoursite.com/2019/02/20/themes-life/</id>
    <published>2019-02-20T07:14:34.000Z</published>
    <updated>2019-02-22T07:08:39.102Z</updated>
    
    <content type="html"><![CDATA[<p>[<img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1550658616372&amp;di=70b7eeb06ed1c994e99b97ef5b7a2b82&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010018554b6ef4000001bf72617201.jpg" alt=""></p><p>#####什么是SpringBoot?<br>    Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)成为领导者。</p><ol><li>创建独立的Spring应用程序</li><li>嵌入的Tomcat，无需部署WAR文件</li><li>简化Maven配置</li><li>自动配置Spring</li><li>提供生产就绪型功能，如指标，健康检查和外部配置</li><li>绝对没有代码生成并且对XML也没有配置要求</li></ol><blockquote><p>SpringBoot 有句名言叫做 “约定大于配置” 是什么意思呢？ 我们直接搭建一个SpringBoot的工程来体会下，用起来是什么感觉呢?   <a href="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=4207918509,3343669022&amp;fm=27&amp;gp=0.jpg" target="_blank" rel="noopener"><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=4207918509,3343669022&amp;fm=27&amp;gp=0.jpg" alt=""></a></p></blockquote><p>说下开发环境 :</p><ul><li>jdk1.8</li><li>开发工具 IDEA</li><li>maven</li></ul><p>新建一个 spring initializr<br><a href="https://images.gitee.com/uploads/images/2019/0220/153038_1085b1f1_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153038_1085b1f1_1289853.png" alt=""></a></p><p>配置报名包名相关信息<br><a href="https://images.gitee.com/uploads/images/2019/0220/153117_351ffdaa_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153117_351ffdaa_1289853.png" alt=""></a><br>这个选择 用到的相关 依赖 它会自动帮我们集成到maven中去<br><a href="https://images.gitee.com/uploads/images/2019/0220/153150_05754e48_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153150_05754e48_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0220/153313_bd92824b_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153313_bd92824b_1289853.png" alt=""></a><br>点击完成<br><a href="https://images.gitee.com/uploads/images/2019/0220/153328_97ea850e_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153328_97ea850e_1289853.png" alt=""></a><br>项目正在构建中<br><a href="https://images.gitee.com/uploads/images/2019/0220/153406_3b70b2b9_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153406_3b70b2b9_1289853.png" alt=""></a><br>以下是整个项目的整体结构<br><a href="https://images.gitee.com/uploads/images/2019/0220/153442_501b3652_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153442_501b3652_1289853.png" alt=""></a></p><p>写了一个测试接口<br><a href="https://images.gitee.com/uploads/images/2019/0220/153718_c2b556ad_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153718_c2b556ad_1289853.png" alt=""></a><br>默认启动端口是 8080 :tw-1f1e8-1f1f3: :tw-1f1e8-1f1f3:<br><a href="https://images.gitee.com/uploads/images/2019/0220/153810_1ec858fe_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153810_1ec858fe_1289853.png" alt=""></a><br>测试成功,一个简单的 SpringBoot 项目搭建完毕<br><a href="https://images.gitee.com/uploads/images/2019/0220/153914_0ae02d7e_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0220/153914_0ae02d7e_1289853.png" alt=""></a></p><p>download : <a href="https://github.com/puruis/SpringBoot-Collection.git" target="_blank" rel="noopener">https://github.com/puruis/SpringBoot-Collection.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1550658616372&amp;amp;di=70b7eeb06ed1c994e99b97ef5
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://yoursite.com/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Docker使用Nexus搭建Maven私服 发布插件</title>
    <link href="http://yoursite.com/2019/02/14/themes-life/"/>
    <id>http://yoursite.com/2019/02/14/themes-life/</id>
    <published>2019-02-14T07:36:53.742Z</published>
    <updated>2019-02-14T07:37:30.842Z</updated>
    
    <content type="html"><![CDATA[<p>###起因</p><p>上一篇文章中用到了 Jenkins 自动部署SpringBoot, 但是因为项目中 依赖了 自己写的一些jar包，平常本地编译 都是 本地依赖没有什么问题，Jenkins 上编译项目就会找不到jar包， 基于这个问题，为大家带来了 Maven 私服 搭建，</p><p>#####其他因素</p><p>1.团队开发，有可能会遇到不能连外网的情况，使我们无法下载Maven构件<br>2.一些第三方构件数量多，各项目使用比较杂，无法通过中央仓库下载，直接复制JAR包到项目上不好管理，还容易占用带宽。</p><ol><li>docker pull sonatype/nexus3  下载一个nexus3的镜像</li><li>docker images 可以查看</li><li><p>在远程linux服务器上<br> cd /<br> cd home<br> mkdir nexus-data</p><p> docker run -d -p 8081:8081 –name nexus -v /home/nexus-data:/var/nexus-data –restart=always sonatype/nexus3</p></li></ol><p>默认访问 <a href="http://www.ip:8081" target="_blank" rel="noopener">http://www.ip:8081</a> 即可访问<br>默认登录账号/码 : admin/admin123<br><a href="https://images.gitee.com/uploads/images/2019/0214/104326_d2dc3edd_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/104326_d2dc3edd_1289853.png" alt=""></a></p><p>点击 Repositories 看到右边分别有几种仓库类型<br>分别是：<br>proxy 远程代理的库，先在本地找 找不到就向远程服务器请求<br>group 仓库组的概念，整合多个仓库资源<br>hosted 宿主机库，可以存放用户自己的一些jar包</p><p><a href="https://images.gitee.com/uploads/images/2019/0214/104537_5999decf_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/104537_5999decf_1289853.png" alt=""></a></p><p>可以看到 它代理的远程服务器地址是 <a href="https://repo1.maven.org/maven2/" target="_blank" rel="noopener">https://repo1.maven.org/maven2/</a></p><p><a href="https://images.gitee.com/uploads/images/2019/0214/110306_1cfe712c_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/110306_1cfe712c_1289853.png" alt=""></a></p><p>可以看到 这个 group 类型的仓库 整合了 以下三个仓库资源<br><a href="https://images.gitee.com/uploads/images/2019/0214/110426_9aa3f0be_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/110426_9aa3f0be_1289853.png" alt=""></a></p><p>新建一个仓库 存放我们要上传的jar<br>在version policy中选择这个仓库的类型，这里选择release<br>在Deployment policy中选择Allow redeploy（这个很重要）</p><p>然后点击创建 完成仓库的创建<br><a href="https://images.gitee.com/uploads/images/2019/0214/110734_74026194_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/110734_74026194_1289853.png" alt=""></a></p><p>新建一个用户<br><a href="https://images.gitee.com/uploads/images/2019/0214/111025_69b25bd2_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/111025_69b25bd2_1289853.png" alt=""></a></p><h3 id="发布代码到Nexus"><a href="#发布代码到Nexus" class="headerlink" title="发布代码到Nexus"></a>发布代码到Nexus</h3><p>修改本地.m2目录下的settings.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;    &lt;servers&gt;      &lt;server&gt;        &lt;id&gt;test&lt;/id&gt;        &lt;username&gt;新建的账号&lt;/username&gt;        &lt;password&gt;新建的密码&lt;/password&gt;      &lt;/server&gt;    &lt;/servers&gt;&lt;/settings&gt;</code></pre><p>修改项目的pom文件</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  &lt;groupId&gt;com.sf&lt;/groupId&gt;  &lt;artifactId&gt;spring-boot-starter-message&lt;/artifactId&gt;  &lt;version&gt;1.0-RELEASE&lt;/version&gt;  &lt;name&gt;spring-boot-starter-message&lt;/name&gt;  &lt;!-- FIXME change it to the project&apos;s website --&gt;  &lt;url&gt;http://www.example.com&lt;/url&gt;  &lt;properties&gt;    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;    &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;    &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;  &lt;/properties&gt;  &lt;dependencies&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;      &lt;artifactId&gt;spring-boot-autoconfigure&lt;/artifactId&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;      &lt;artifactId&gt;lombok&lt;/artifactId&gt;      &lt;version&gt;1.18.0&lt;/version&gt;      &lt;scope&gt;provided&lt;/scope&gt;    &lt;/dependency&gt;    &lt;!-- GuavaCache 缓存 --&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.google.guava&lt;/groupId&gt;      &lt;artifactId&gt;guava&lt;/artifactId&gt;      &lt;version&gt;19.0&lt;/version&gt;    &lt;/dependency&gt;    &lt;!--&lt;dependency&gt;--&gt;      &lt;!--&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;--&gt;      &lt;!--&lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;--&gt;    &lt;!--&lt;/dependency&gt;--&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.aliyun&lt;/groupId&gt;      &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;      &lt;version&gt;3.2.8&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.aliyun&lt;/groupId&gt;      &lt;artifactId&gt;aliyun-java-sdk-dysmsapi&lt;/artifactId&gt;      &lt;version&gt;1.1.0&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.aliyun&lt;/groupId&gt;      &lt;artifactId&gt;aliyun-java-sdk-dm&lt;/artifactId&gt;      &lt;version&gt;3.1.0&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;cn.jpush.api&lt;/groupId&gt;      &lt;artifactId&gt;jpush-client&lt;/artifactId&gt;      &lt;version&gt;3.3.7&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;cn.jpush.api&lt;/groupId&gt;      &lt;artifactId&gt;jiguang-common&lt;/artifactId&gt;      &lt;version&gt;1.1.1&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;io.netty&lt;/groupId&gt;      &lt;artifactId&gt;netty-all&lt;/artifactId&gt;      &lt;version&gt;4.1.6.Final&lt;/version&gt;      &lt;scope&gt;compile&lt;/scope&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;      &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;      &lt;version&gt;1.7.7&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;      &lt;artifactId&gt;gson&lt;/artifactId&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;      &lt;artifactId&gt;fastjson&lt;/artifactId&gt;      &lt;version&gt;1.2.46&lt;/version&gt;    &lt;/dependency&gt;    &lt;!-- For log4j --&gt;    &lt;!--&lt;dependency&gt;--&gt;      &lt;!--&lt;groupId&gt;org.slf4j&lt;/groupId&gt;--&gt;      &lt;!--&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;--&gt;      &lt;!--&lt;version&gt;1.7.7&lt;/version&gt;--&gt;    &lt;!--&lt;/dependency&gt;--&gt;    &lt;!--&lt;dependency&gt;--&gt;      &lt;!--&lt;groupId&gt;log4j&lt;/groupId&gt;--&gt;      &lt;!--&lt;artifactId&gt;log4j&lt;/artifactId&gt;--&gt;      &lt;!--&lt;version&gt;1.2.17&lt;/version&gt;--&gt;    &lt;!--&lt;/dependency&gt;--&gt;  &lt;/dependencies&gt;  &lt;dependencyManagement&gt;    &lt;dependencies&gt;      &lt;dependency&gt;        &lt;!-- Import dependency management from Spring Boot --&gt;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;        &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;        &lt;!--注意限定版本一定为RELEASE,因为上传的对应仓库的存储类型为RELEASE--&gt;        &lt;version&gt;2.0.0.RELEASE&lt;/version&gt;        &lt;type&gt;pom&lt;/type&gt;        &lt;scope&gt;import&lt;/scope&gt;      &lt;/dependency&gt;    &lt;/dependencies&gt;  &lt;/dependencyManagement&gt;  &lt;!--指定仓库地址--&gt;  &lt;distributionManagement&gt;    &lt;repository&gt;      &lt;!--此名称要和.m2/settings.xml中设置的ID一致--&gt;      &lt;id&gt;test&lt;/id&gt;      &lt;url&gt;http://192.168.1.16:8081/repository/invespec-release/&lt;/url&gt;    &lt;/repository&gt;  &lt;/distributionManagement&gt;  &lt;build&gt;    &lt;finalName&gt;spring-boot-starter-pay&lt;/finalName&gt;    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;      &lt;plugins&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;          &lt;version&gt;3.0.0&lt;/version&gt;        &lt;/plugin&gt;        &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;          &lt;version&gt;3.0.2&lt;/version&gt;        &lt;/plugin&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;          &lt;version&gt;3.7.0&lt;/version&gt;        &lt;/plugin&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;          &lt;version&gt;2.20.1&lt;/version&gt;        &lt;/plugin&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;          &lt;version&gt;3.2.0&lt;/version&gt;        &lt;/plugin&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;          &lt;version&gt;2.5.2&lt;/version&gt;        &lt;/plugin&gt;        &lt;plugin&gt;          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;          &lt;version&gt;2.8.2&lt;/version&gt;        &lt;/plugin&gt;        &lt;!--发布代码Jar插件--&gt;        &lt;plugin&gt;          &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;          &lt;version&gt;2.7&lt;/version&gt;        &lt;/plugin&gt;        &lt;!--发布源码插件--&gt;        &lt;plugin&gt;          &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;          &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;          &lt;version&gt;2.2.1&lt;/version&gt;          &lt;executions&gt;            &lt;execution&gt;              &lt;phase&gt;package&lt;/phase&gt;              &lt;goals&gt;                &lt;goal&gt;jar&lt;/goal&gt;              &lt;/goals&gt;            &lt;/execution&gt;          &lt;/executions&gt;        &lt;/plugin&gt;      &lt;/plugins&gt;    &lt;/pluginManagement&gt;  &lt;/build&gt;&lt;/project&gt;</code></pre><p>最后一键发布<br><a href="https://images.gitee.com/uploads/images/2019/0214/151217_2c6e6340_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/151217_2c6e6340_1289853.png" alt=""></a></p><p>回到系统搜索<br><a href="https://images.gitee.com/uploads/images/2019/0214/151342_bdfc0546_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0214/151342_bdfc0546_1289853.png" alt=""></a></p><p>以上我们完成了 Nexus 的搭建 及 项目的发布，谢谢大家阅读</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###起因&lt;/p&gt;
&lt;p&gt;上一篇文章中用到了 Jenkins 自动部署SpringBoot, 但是因为项目中 依赖了 自己写的一些jar包，平常本地编译 都是 本地依赖没有什么问题，Jenkins 上编译项目就会找不到jar包， 基于这个问题，为大家带来了 Maven 私服
      
    
    </summary>
    
      <category term="系统运维" scheme="http://yoursite.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="CI自动化部署" scheme="http://yoursite.com/tags/CI%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    
      <category term="Maven私服" scheme="http://yoursite.com/tags/Maven%E7%A7%81%E6%9C%8D/"/>
    
      <category term="Nexus" scheme="http://yoursite.com/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>实战Docker搭建自动化部署环境，远程自动部署SpringBoot</title>
    <link href="http://yoursite.com/2019/02/13/themes-life/"/>
    <id>http://yoursite.com/2019/02/13/themes-life/</id>
    <published>2019-02-13T09:14:34.000Z</published>
    <updated>2019-02-13T09:46:23.191Z</updated>
    
    <content type="html"><![CDATA[<p>####起因</p><blockquote><p>项目上线运行后,几乎每天都需要更新代码，虽说很简单 ，本地编译，上传，运行，但是每天重复也是一个十分蛋痛的工作，作为一个工程师 一定要杜绝重复劳动。</p></blockquote><p>####<a href="http://www.docker.org.cn" title="Docker" target="_blank" rel="noopener">Docker</a></p><blockquote><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p></blockquote><p>####<a href="https://gitee.com" title="Gitee" target="_blank" rel="noopener">Gitee</a></p><blockquote><p>云端软件开发协作平台</p></blockquote><p>此时 我的测试服务器 已经安装好了 docker 如果你还没有安装 请先安装<br>输入 docker -v  可以查看版本<br><a href="https://images.gitee.com/uploads/images/2019/0125/110740_e2709d98_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/110740_e2709d98_1289853.png" alt=""></a></p><p>####推荐此版本的容器</p><p><a href="https://images.gitee.com/uploads/images/2019/0125/144903_7c99ee1c_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/144903_7c99ee1c_1289853.png" alt=""></a></p><ol><li><p>第一步</p><blockquote><p><code>docker pull jenkins/jenkins 下载jenkins</code></p></blockquote></li><li><p>第二步</p><blockquote><p><code>docker images 查看本地镜像</code><br><a href="https://img-blog.csdn.net/20180708141046832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/20180708141046832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a><br><a href="https://img-blog.csdn.net/2018070814120663?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/2018070814120663?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a></p></blockquote></li><li>第三步<br>新建一个jenkins 目录</li></ol><blockquote><p><code>cd /home</code></p></blockquote><blockquote><p><code>mkdir jenkins</code></p></blockquote><blockquote><p>最后运行 <code>docker run -d --name myjenkins -p 49001:8080 -v /home/jenkins_home:/home/jenkins -v /var/maven/apache-maven-3.6.0:/usr/maven/apache-maven-3.6.0 -v /var/java/jdk1.8.0_191:/usr/java/java1.8.0_191 jenkins(这个是镜像名称)</code>， -v 指定目录映射（把宿主机的 java 和 maven环境映射过去,后续需要进入容器 配置jenkins的 java 和maven 环境）</p></blockquote><blockquote><p>ps:其中49001：8080，表示docker内部使用8080端口，服务器使用49001端口，然后将二者映射起来，之后在浏览器访问的时候实际上还是访问服务器的49001端口,注意关闭防火墙 或是 开通端口号</p></blockquote><blockquote><p>此处需要输入 jenkins自动生成的密码</p></blockquote><blockquote><p>输入 <code>docker exec -it myjenkins bash</code> 进入 myjenkins 容器里面</p></blockquote><blockquote><p>输入 find -name initialAdminPassword<br><a href="https://images.gitee.com/uploads/images/2019/0125/120327_5f98240a_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/120327_5f98240a_1289853.png" alt=""></a><br>然后 输入cat 命令打印 initialAdminPassword 的内容 复制到页面中</p></blockquote><p>安装成功<br><a href="https://images.gitee.com/uploads/images/2019/0125/120526_b047c962_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/120526_b047c962_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0125/145037_37387e8d_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/145037_37387e8d_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0125/120609_40a5db22_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/120609_40a5db22_1289853.png" alt=""></a></p><p><a href="https://images.gitee.com/uploads/images/2019/0125/120633_18d43fc3_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/120633_18d43fc3_1289853.png" alt=""></a></p><blockquote><p>在全局工具配置中  配置Java环境 和 maven 环境<br><a href="https://images.gitee.com/uploads/images/2019/0125/122401_f7ae7cca_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/122401_f7ae7cca_1289853.png" alt=""></a></p></blockquote><hr><blockquote><p>ps: 安装Jenkins后首次访问时由于其他原因【具体未知】会产生离线问题。网上找了个遍还是不能解决，所以只能跳过常用插件安装这步。进入Jenkins后再安装这些插件（我这遇到了，我选择换了一个版本就没事了）</p></blockquote><p>####添加常用的插件<br><a href="https://img-blog.csdn.net/20180708141046832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/20180708141046832?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a><br><a href="https://img-blog.csdn.net/20180708141138548?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/20180708141138548?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a><br><a href="https://img-blog.csdn.net/2018070814120663?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/2018070814120663?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a><br><a href="https://img-blog.csdn.net/20180708141251349?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" target="_blank" rel="noopener"><img src="https://img-blog.csdn.net/20180708141251349?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pbmcxOTk1MTIyNA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></a></p><h2 id="接下来开始配置-java-及-Maven环境"><a href="#接下来开始配置-java-及-Maven环境" class="headerlink" title="接下来开始配置 java 及 Maven环境"></a>接下来开始配置 java 及 Maven环境</h2><p>JAVA_HOME填写 docker启动命令中 从宿主机映射过来的路径<br>MAVEN也填写 docker启动命令中 从宿主机映射过来的路径<br><a href="https://images.gitee.com/uploads/images/2019/0125/145322_6f6731e1_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0125/145322_6f6731e1_1289853.png" alt=""></a></p><p>##新建项目</p><p>如果没有maven项目可选，那么请先安装 Maven Integration plugin 插件<br><a href="https://images.gitee.com/uploads/images/2019/0213/165139_96fbeba6_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/165139_96fbeba6_1289853.png" alt=""></a></p><p>我这里使用的是 git<br><a href="https://images.gitee.com/uploads/images/2019/0213/165520_f22e9112_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/165520_f22e9112_1289853.png" alt=""></a><br><a href="https://images.gitee.com/uploads/images/2019/0213/165653_4e6bcb81_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/165653_4e6bcb81_1289853.png" alt=""></a></p><p>此处 V2是重点-》需要现在 系统管理的系统设置 中配置<br>Source files：需要上传到服务器的jar包<br>Remove prefix： 需要移除的后缀<br>Remote directory： 远程目录(此处会和 下面配置的 Remote Directory 做拼接)<br>Exec command：文件上传后 执行的命令</p><p>start.sh:</p><pre><code>#!/bin/bashexport JAVA_HOME=/usr/local/java/jdk1.8.0_191echo ${JAVA_HOME}echo &quot;授权当前用户&quot;chmod 777 /opt/project/ixx-web.jar echo &quot;执行....&quot;cd /opt/project/ nohup ${JAVA_HOME}/bin/java -jar ixx-web.jar &gt; aa.out &amp;echo &quot;启动成功&quot;</code></pre><p>stop.sh:</p><pre><code>#!/bin/bashecho &quot;stop SpringBoot BAppApiServerApplication&quot;pid=`ps -ef | grep ixx-web.jar | grep -v grep | awk &apos;{print $2}&apos;`echo “旧应用进程id：$pid”if [ -n &quot;$pid&quot; ]thenkill -9 $pidfi</code></pre><p><a href="https://images.gitee.com/uploads/images/2019/0213/165751_9f59f39e_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/165751_9f59f39e_1289853.png" alt=""></a></p><pre><code>Passphrase ： 服务器登录密码Hostname： 服务器地址Username： 用户名Remote Directory：文件上传的远程目录</code></pre><p><a href="https://images.gitee.com/uploads/images/2019/0213/170118_5e517695_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/170118_5e517695_1289853.png" alt=""></a></p><p>然后保存，立即构建<br><a href="https://images.gitee.com/uploads/images/2019/0213/170442_5767b20f_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/170442_5767b20f_1289853.png" alt=""></a></p><p>系统会开始构建<br><a href="https://images.gitee.com/uploads/images/2019/0213/170958_8c64d259_1289853.png" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0213/170958_8c64d259_1289853.png" alt=""></a></p><p>构建成功，此时 jenkins 已经把 master 分支上的代码 编译-&gt;打包-&gt;上传-&gt;运行成功</p><p>以上是这次给大家分享的 jenkins搭建 及 springBoot 远程自动部署，谢谢大家阅读</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;####起因&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;项目上线运行后,几乎每天都需要更新代码，虽说很简单 ，本地编译，上传，运行，但是每天重复也是一个十分蛋痛的工作，作为一个工程师 一定要杜绝重复劳动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;####&lt;a href=&quot;h
      
    
    </summary>
    
      <category term="系统运维" scheme="http://yoursite.com/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="CI自动化部署" scheme="http://yoursite.com/tags/CI%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>2018总结-2019前行</title>
    <link href="http://yoursite.com/2019/01/24/themes-life/"/>
    <id>http://yoursite.com/2019/01/24/themes-life/</id>
    <published>2019-01-24T03:14:34.000Z</published>
    <updated>2019-01-24T04:54:16.541Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1548309588940&amp;di=de8098ce88227e3d2c143144d1214cfb&amp;imgtype=0&amp;src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farchive%2F21ac150387f8d2ffad4a0e1a39c28f888d3a1a9d.jpg" title="镇楼" target="_blank" rel="noopener"><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1548309588940&amp;di=de8098ce88227e3d2c143144d1214cfb&amp;imgtype=0&amp;src=http%3A%2F%2Fi0.hdslb.com%2Fbfs%2Farchive%2F21ac150387f8d2ffad4a0e1a39c28f888d3a1a9d.jpg" alt="镇楼" title="镇楼"></a></p><h1 id="2018总结"><a href="#2018总结" class="headerlink" title="2018总结"></a>2018总结</h1><blockquote><p>一年时间匆匆而过,又到了一年该总结的时候，2018年期间断断续续写过一些博客,但是始终没能坚持下来，一方面因为工作忙(作为一个从业不到两年的开发，已经完成了从开发到管理的蜕变)，并在工作之余加入了一个博士团队 开发自己的产品，也算是自己在工作之外的小尝试吧，也是希望自己多扩展扩展自己的交际圈。</p></blockquote><blockquote><p>2018年也完成了人生中的一件大事，靠自己的努力，在老家买上了第一套房(嘿嘿,可能还有第二套)，当然这个也感谢父母的支持和女朋友的支持，非常感谢</p></blockquote><h5 id="技术方面总结"><a href="#技术方面总结" class="headerlink" title="技术方面总结"></a>技术方面总结</h5><blockquote><p>因为之前都是在国企做开发，一直没有机会接触到服务器相关的操作，2018鼓足了一口劲跳了出来 到一家小公司担任技术负责人(能够接触到整个开发流程的方方面面)，期间 一个学长 曾经邀请我 去深圳 做区块链的开发，但是经过长时间思考 没有选择去，原因嘛(在这边的环境 各方面的人脉资源 都比较足，还是比较有机会的，慎重考虑后才决定好)， 很多事的耽误，导致今年没有太大的进步，只是把已有的技术做了巩固，学了python相关技术。哎 时间就像海绵里的水 只要愿意挤总还是有的，真想 打醒自己。 人不能给自己太多借口。</p></blockquote><p>#2019期望<br>写一个自己的开源项目[<a href="https://gitee.com/zprsss/ixx.git" title="ixx" target="_blank" rel="noopener">ixx</a>]<br><a href="https://images.gitee.com/uploads/images/2019/0123/143841_26e304d5_1289853.png" title="登录" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0123/143841_26e304d5_1289853.png" alt="登录" title="登录"></a><br><a href="https://images.gitee.com/uploads/images/2019/0123/143852_34f8513c_1289853.png" title="多数据源" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0123/143852_34f8513c_1289853.png" alt="多数据源" title="多数据源"></a><br><a href="https://images.gitee.com/uploads/images/2019/0123/143913_643c778a_1289853.png" title="案例" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0123/143913_643c778a_1289853.png" alt="案例" title="案例"></a><br><a href="https://images.gitee.com/uploads/images/2019/0123/143913_643c778a_1289853.png" title="权限控制" target="_blank" rel="noopener"><img src="https://images.gitee.com/uploads/images/2019/0123/143913_643c778a_1289853.png" alt="权限控制" title="权限控制"></a><br>已经完成了基础部分，后面陆续会加入新的功能<br>也会坚持更新博客，再此也立一个Flag</p><h6 id="2019技术学习清单"><a href="#2019技术学习清单" class="headerlink" title="2019技术学习清单"></a>2019技术学习清单</h6><ol><li>网关：Nginx、Kong、Zuul</li><li>缓存：Redis、MemCached、OsCache、EhCache</li><li>搜索：ElasticSearch、Solr</li><li>注册中心：Eureka、Zookeeper、Redis、Etcd、Consul</li><li>消费队列：RabbitMQ、ZeroMQ、Redis、ActiveMQ、Kafka</li><li>压测：LoadRunner、JMeter、AB、webbench</li><li>python爬虫，Django开发，人工智能入门</li><li>小程序开发</li><li>Java原理深究</li><li>再开发一个开源项目</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1548309588940&amp;amp;di=de8098ce88227e3d2c143144d12
      
    
    </summary>
    
      <category term="计划总结" scheme="http://yoursite.com/categories/%E8%AE%A1%E5%88%92%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="计划" scheme="http://yoursite.com/tags/%E8%AE%A1%E5%88%92/"/>
    
      <category term="总结" scheme="http://yoursite.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
